<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>简单的象棋开发</title>
      <link href="/2022/03/09/jian-dan-de-xiang-qi-kai-fa/"/>
      <url>/2022/03/09/jian-dan-de-xiang-qi-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="简单的象棋开发"><a href="#简单的象棋开发" class="headerlink" title="简单的象棋开发"></a>简单的象棋开发</h1><h6 id="我们需要准备的知识是c语言基础和easyx图形库"><a href="#我们需要准备的知识是c语言基础和easyx图形库" class="headerlink" title="我们需要准备的知识是c语言基础和easyx图形库"></a>我们需要准备的知识是c语言基础和easyx图形库</h6><h6 id="首先头文件少不了"><a href="#首先头文件少不了" class="headerlink" title="首先头文件少不了:"></a>首先头文件少不了:</h6><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span>(c语言的头文件)</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;graphics.h></span>（easyx的）</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;mmsystem.h></span>（音乐播放的）</span><span class="token macro property">#<span class="token directive keyword">pragma</span> comment(lib,"winmm.lib")（链接上音乐播放器的库）</span></code></pre><h6 id="然后老套路了"><a href="#然后老套路了" class="headerlink" title="然后老套路了:"></a>然后老套路了:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h6 id="创建图形窗口（这里不创建会听到熟悉的声音）"><a href="#创建图形窗口（这里不创建会听到熟悉的声音）" class="headerlink" title="创建图形窗口（这里不创建会听到熟悉的声音）:"></a>创建图形窗口（这里不创建会听到熟悉的声音）:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">initgraph</span><span class="token punctuation">(</span>WIN_WIDTH<span class="token punctuation">,</span> WIN_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// (第三个参数SHOWCONSOLE控制控制台窗口的显示与否)</span><span class="token punctuation">}</span></code></pre><h6 id="还有个问题图形窗口会闪退"><a href="#还有个问题图形窗口会闪退" class="headerlink" title="还有个问题图形窗口会闪退:"></a>还有个问题图形窗口会闪退:</h6><p>所以我们需要阻塞窗口`：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>或者：</p><pre><code>getchar();</code></pre><h6 id="象棋的属性和一些初始化"><a href="#象棋的属性和一些初始化" class="headerlink" title="象棋的属性和一些初始化:"></a>象棋的属性和一些初始化:</h6><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> INTERVAL 50 </span><span class="token comment" spellcheck="true">//前面的间隔</span><span class="token macro property">#<span class="token directive keyword">define</span> CHESS_GRID_SIZE 70</span><span class="token comment" spellcheck="true">//格子宽度</span><span class="token macro property">#<span class="token directive keyword">define</span> ROW 10</span><span class="token macro property">#<span class="token directive keyword">define</span> COL 9</span><span class="token macro property">#<span class="token directive keyword">define</span> WIN_WIDTH ((COL-1)*CHESS_GRID_SIZE+INTERVAL*2+250)</span><span class="token comment" spellcheck="true">//窗口宽度计算得出</span><span class="token macro property">#<span class="token directive keyword">define</span> WIN_HEIGHT ((ROW-1)*CHESS_GRID_SIZE+INTERVAL*2)</span><span class="token comment" spellcheck="true">//窗口高度计算得出</span>IMAGE img_chessBoard<span class="token punctuation">;</span><span class="token punctuation">(</span>定义背景图<span class="token punctuation">)</span><span class="token keyword">void</span> <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>加载背景图<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">loadimage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>img_chessBoard<span class="token punctuation">,</span> <span class="token string">"./res/Chess.jpg"</span><span class="token punctuation">,</span> <span class="token number">650</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">enum</span> Pieces <span class="token comment" spellcheck="true">//棋子</span><span class="token punctuation">{</span>    SPACE <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>    車<span class="token punctuation">,</span> 馬<span class="token punctuation">,</span> 象<span class="token punctuation">,</span> 士<span class="token punctuation">,</span> 将<span class="token punctuation">,</span> 砲<span class="token punctuation">,</span> 卒<span class="token punctuation">,</span>    俥<span class="token punctuation">,</span> 马<span class="token punctuation">,</span> 相<span class="token punctuation">,</span> 仕<span class="token punctuation">,</span> 帥<span class="token punctuation">,</span> 炮<span class="token punctuation">,</span> 兵<span class="token punctuation">,</span>    BEGIN<span class="token punctuation">,</span> END<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//给id赋值</span><span class="token keyword">int</span> redChess<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 車<span class="token punctuation">,</span> 馬<span class="token punctuation">,</span> 象<span class="token punctuation">,</span> 士<span class="token punctuation">,</span> 将<span class="token punctuation">,</span> 砲<span class="token punctuation">,</span> 卒 <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> blackChess<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 俥<span class="token punctuation">,</span> 马<span class="token punctuation">,</span> 相<span class="token punctuation">,</span> 仕<span class="token punctuation">,</span> 帥<span class="token punctuation">,</span> 炮<span class="token punctuation">,</span> 兵 <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绘制时转化成字符串</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ChessName<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"車"</span><span class="token punctuation">,</span><span class="token string">"馬"</span><span class="token punctuation">,</span><span class="token string">"象"</span><span class="token punctuation">,</span><span class="token string">"士"</span><span class="token punctuation">,</span><span class="token string">"将"</span><span class="token punctuation">,</span><span class="token string">"砲"</span><span class="token punctuation">,</span><span class="token string">"卒"</span><span class="token punctuation">,</span><span class="token string">"俥"</span><span class="token punctuation">,</span> <span class="token string">"马"</span><span class="token punctuation">,</span> <span class="token string">"相"</span><span class="token punctuation">,</span> <span class="token string">"仕"</span><span class="token punctuation">,</span> <span class="token string">"帥"</span><span class="token punctuation">,</span> <span class="token string">"炮"</span><span class="token punctuation">,</span> <span class="token string">"兵"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">struct</span> Chess<span class="token punctuation">{</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋子名称</span>    <span class="token keyword">int</span> type<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋子类型，红棋，还是黑棋</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//坐标</span>    <span class="token keyword">int</span> y<span class="token punctuation">;</span>    bool river<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否过了河</span><span class="token punctuation">}</span>map<span class="token punctuation">[</span>ROW<span class="token punctuation">]</span><span class="token punctuation">[</span>COL<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><h6 id="鼠标的点击初始化"><a href="#鼠标的点击初始化" class="headerlink" title="鼠标的点击初始化:"></a>鼠标的点击初始化:</h6><pre class=" language-c"><code class="language-c">POINT begin <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录前后两次点击的下标</span><span class="token keyword">int</span> state <span class="token operator">=</span> BEGIN<span class="token punctuation">;</span><span class="token keyword">int</span> whereMove <span class="token operator">=</span> RED<span class="token punctuation">;</span></code></pre><h6 id="游戏开始初始化"><a href="#游戏开始初始化" class="headerlink" title="游戏开始初始化:"></a>游戏开始初始化:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">GameInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//遍历二维数组</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ROW<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> temp1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> temp2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> COL<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> chessname <span class="token operator">=</span> SPACE<span class="token punctuation">;</span>            <span class="token keyword">int</span> mcolor <span class="token operator">=</span> BLACK<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//black黑色</span>            <span class="token comment" spellcheck="true">//黑棋初始化</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                mcolor <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//第1行</span>                <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                        temp<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span>                    <span class="token punctuation">{</span>                        temp1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> temp2<span class="token punctuation">;</span>                        temp2<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span>temp1<span class="token punctuation">]</span><span class="token punctuation">;</span>                    temp1<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置炮</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> k <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置小兵</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> k <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span><span class="token comment" spellcheck="true">//红旗初始化</span>            <span class="token punctuation">{</span>                mcolor <span class="token operator">=</span> RED<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//最后一行</span>                <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                        temp<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span>                    <span class="token punctuation">{</span>                        temp1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> temp2<span class="token punctuation">;</span>                        temp2<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span>temp1<span class="token punctuation">]</span><span class="token punctuation">;</span>                    temp1<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置炮</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> k <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置小兵</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span> <span class="token operator">&amp;&amp;</span> k <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">=</span> mcolor<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> chessname<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>river <span class="token operator">=</span> false<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> k <span class="token operator">*</span> CHESS_GRID_SIZE <span class="token operator">+</span> INTERVAL<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> i <span class="token operator">*</span> CHESS_GRID_SIZE <span class="token operator">+</span> INTERVAL<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="游戏绘制"><a href="#游戏绘制" class="headerlink" title="游戏绘制:"></a>游戏绘制:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">GameDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">setbkcolor</span><span class="token punctuation">(</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">252</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cleardevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setlinestyle</span><span class="token punctuation">(</span>PS_SOLID<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setfillcolor</span><span class="token punctuation">(</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">252</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">putimage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>img_chessBoard<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//画棋子</span>    <span class="token function">settextstyle</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"楷体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setbkmode</span><span class="token punctuation">(</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ROW<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> COL<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> SPACE<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> BLACK<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token function">settextcolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span>                <span class="token punctuation">{</span>                    <span class="token function">settextcolor</span><span class="token punctuation">(</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">fillcircle</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">fillcircle</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">outtextxy</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> ChessName<span class="token punctuation">[</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//画点击出现的边框</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> END <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> SPACE<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h6 id="游戏控制"><a href="#游戏控制" class="headerlink" title="游戏控制:"></a>游戏控制:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">KeyControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> ExMessage msg<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">peekmessage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>msg<span class="token punctuation">,</span> EM_MOUSE<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>message <span class="token operator">==</span> WM_LBUTTONDOWN<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取鼠标点击得数组下标</span>            <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>y <span class="token operator">-</span> INTERVAL<span class="token punctuation">)</span> <span class="token operator">/</span> CHESS_GRID_SIZE<span class="token punctuation">;</span>            <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">-</span> INTERVAL<span class="token punctuation">)</span> <span class="token operator">/</span> CHESS_GRID_SIZE<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//if (msg.y > map[row][col].y - 30 &amp;&amp; msg.y&lt;map[row][col].y + 30 &amp;&amp; msg.x>map[row][col].x - 30 &amp;&amp; msg.x &lt; map[row][col].x + 30)</span>            <span class="token comment" spellcheck="true">//{</span>            <span class="token comment" spellcheck="true">//    //在棋子上点击</span>            <span class="token comment" spellcheck="true">//}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                col<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                row<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                row<span class="token operator">++</span><span class="token punctuation">;</span>                col<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> BEGIN<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"begin:(%d,%d)\n"</span><span class="token punctuation">,</span> begin<span class="token punctuation">.</span>x<span class="token punctuation">,</span> begin<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                begin<span class="token punctuation">.</span>x <span class="token operator">=</span> row<span class="token punctuation">;</span>                begin<span class="token punctuation">.</span>y <span class="token operator">=</span> col<span class="token punctuation">;</span>                state <span class="token operator">=</span> END<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> END<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"end:(%d,%d)\n"</span><span class="token punctuation">,</span> end<span class="token punctuation">.</span>x<span class="token punctuation">,</span> end<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                end<span class="token punctuation">.</span>x <span class="token operator">=</span> row<span class="token punctuation">;</span>                end<span class="token punctuation">.</span>y <span class="token operator">=</span> col<span class="token punctuation">;</span>                state <span class="token operator">=</span> BEGIN<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="游戏规则"><a href="#游戏规则" class="headerlink" title="游戏规则:"></a>游戏规则:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> check（POINT begin， POINT end）<span class="token punctuation">{</span><span class="token keyword">int</span> _count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>水平方向<span class="token keyword">int</span> tmax <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> tmin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>如果（开始。x <span class="token operator">==</span> 结束。（十）    <span class="token punctuation">{</span>tmax <span class="token operator">=</span> max（begin<span class="token punctuation">.</span>是的，结束。y）<span class="token punctuation">;</span>tmin <span class="token operator">=</span> min（begin<span class="token punctuation">.</span>是的，结束。y）<span class="token punctuation">;</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> tmin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tmax<span class="token punctuation">;</span> i<span class="token operator">++</span>）        <span class="token punctuation">{</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格）            <span class="token punctuation">{</span>_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>否则如果（开始。y <span class="token operator">==</span> 结束。y）    <span class="token punctuation">{</span>垂直方向tmax <span class="token operator">=</span> max（begin<span class="token punctuation">.</span>x，结束。x）<span class="token punctuation">;</span>tmin <span class="token operator">=</span> min（begin<span class="token punctuation">.</span>x，结束。x）<span class="token punctuation">;</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> tmin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tmax<span class="token punctuation">;</span> i<span class="token operator">++</span>）        <span class="token punctuation">{</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格）            <span class="token punctuation">{</span>_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>返回_count<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h6 id="棋子的移动："><a href="#棋子的移动：" class="headerlink" title="棋子的移动："></a><strong>棋子的移动：</strong></h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> chessMove（）<span class="token punctuation">{</span>布尔 isok <span class="token operator">=</span> 假<span class="token punctuation">;</span>printf（<span class="token string">"whereMove %d \n"</span>， whereMove）<span class="token punctuation">;</span>点击的不是同一个，以及都有了数据如果 （！（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">&amp;&amp;</span> begin<span class="token punctuation">.</span>y <span class="token operator">==</span> 结束。y） <span class="token operator">&amp;&amp;</span>begin<span class="token punctuation">.</span>x ！<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x ！<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格<span class="token operator">&amp;&amp;</span> （map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 空格<span class="token operator">||</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 ！<span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。类型）<span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 其中移动）    <span class="token punctuation">{</span>POINT general<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span>，<span class="token number">3</span>，<span class="token number">7</span>，<span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双方九宫格左上角的位置</span><span class="token keyword">switch</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>（id）        <span class="token punctuation">{</span>案例件数：：将：表壳件数：：帥：<span class="token keyword">for</span> （<span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span>）            <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x<span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span>）                <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。y<span class="token punctuation">;</span>k <span class="token operator">&lt;=</span> 一般<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span>）                    <span class="token punctuation">{</span>如果（结束。x <span class="token operator">==</span> i <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> k <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">//结束位置在九宫格内</span>（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y） <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">///结束位置和开始位置，在同一水平或垂直方向（只能走直线）</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>） <span class="token comment" spellcheck="true">//一次只能走一格</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳片： ：士：表壳片：：仕：<span class="token keyword">for</span> （<span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span>）            <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x<span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span>）                <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。y<span class="token punctuation">;</span>k <span class="token operator">&lt;=</span> 一般<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span>）                    <span class="token punctuation">{</span>如果（结束。x <span class="token operator">==</span> i <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> k <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">//结束位置在九宫格内</span>（开始。x ！<span class="token operator">=</span> 结束。x <span class="token operator">&amp;&amp;</span> begin<span class="token punctuation">.</span>y ！<span class="token operator">=</span> 结束。y） <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">///结束位置和开始位置，不在同一水平或垂直方向（只能走斜线）</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>） <span class="token comment" spellcheck="true">//一次只能走一格</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例件数：：相：表壳件：：象：如果 （（结束。x <span class="token operator">==</span> 开始。x <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> 开始。y <span class="token operator">-</span> <span class="token number">2</span>）<span class="token comment" spellcheck="true">// ||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y - 2）</span><span class="token comment" spellcheck="true">// ||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y + 2）</span><span class="token comment" spellcheck="true">// ||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y + 2）</span>            <span class="token comment" spellcheck="true">//    )</span>如果 （abs（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。类型）            <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳件：：马：表壳片：：马：<span class="token comment" spellcheck="true">/*如果 （（完。x == 开始。x + 1 &amp;&amp; end.y == 开始。y + 2）||（完。x == 开始。x + 1 &amp;&amp; end.y == 开始。y - 2）||（完。x == 开始。x - 1 &amp;&amp; end.y == 开始。y + 2）||（完。x == 开始。x - 1 &amp;&amp; end.y == 开始。y - 2）||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y + 1）||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y - 1）||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y + 1）||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y - 1）                )*/</span>如果 （（abs（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">2</span>）<span class="token operator">||</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））            <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳件数：：俥：表壳件数：：車：判断直行如果（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y）            <span class="token punctuation">{</span>落子位置为空，落子位置和源位置之间没有子挡路<span class="token keyword">if</span> （check（begin， end） <span class="token operator">==</span> <span class="token number">0</span>）                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例片数：：炮：表壳件数：：砲：判断直行如果（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y）            <span class="token punctuation">{</span>落子位置为空，落子位置和源位置之间没有子挡路<span class="token keyword">if</span> （（map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> SPACE <span class="token operator">&amp;&amp;</span> check（begin， end） <span class="token operator">==</span> <span class="token number">0</span>）<span class="token comment" spellcheck="true">//走子</span><span class="token operator">||</span>（map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> SPACE <span class="token operator">&amp;&amp;</span> check（begin， end） <span class="token operator">==</span> <span class="token number">1</span>））<span class="token comment" spellcheck="true">//吃子</span>                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>吃子判断，落子位置有子，落子位置和源位置之间有且只有一个字挡路            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例片：：兵：表壳件数：：卒：没过河只准向前，不转左右<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 开始。x <span class="token operator">&lt;=</span> <span class="token number">4</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 假<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 开始。x <span class="token operator">></span> <span class="token number">4</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 真<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> begin。x <span class="token operator">>=</span> <span class="token number">5</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 假<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> begin。x <span class="token operator">&lt;</span> <span class="token number">5</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 真<span class="token punctuation">;</span>            <span class="token punctuation">}</span>如果没过河，只能向前走<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">==</span> 假 <span class="token operator">&amp;&amp;</span> 结束。y <span class="token operator">==</span> 开始。y）            <span class="token punctuation">{</span><span class="token keyword">if</span> （（map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 结束。x <span class="token operator">==</span> 开始。x <span class="token operator">+</span> <span class="token number">1</span>） <span class="token operator">||</span>（map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。type <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x <span class="token operator">==</span> 开始。x <span class="token operator">-</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果过了河，不能往回走</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">==</span> 真）            <span class="token punctuation">{</span>如果为黑棋（上方），并且结束位置不小于开始位置<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 结束。x <span class="token operator">></span> <span class="token operator">=</span> 开始。x <span class="token operator">&amp;&amp;</span> （abs（end<span class="token punctuation">.</span>x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果为红棋（下方），并且结束位置不大于开始位置</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token operator">=</span> 开始。x <span class="token operator">&amp;&amp;</span> （abs（end<span class="token punctuation">.</span>x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">if</span> （isok <span class="token operator">==</span> true）        <span class="token punctuation">{</span>落子声音mciSendString（<span class="token string">"close PLAY"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>mciSendString（<span class="token string">"open ./res/playChess.mp3 别名播放"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>mciSendString（<span class="token string">"play PLAY"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。id<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">=</span>map<span class="token punctuation">[</span>开始。x<span class="token punctuation">[</span>开始。y<span class="token punctuation">]</span>。类型<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>river <span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。河流<span class="token punctuation">;</span>此处有待完善map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> 空间<span class="token punctuation">;</span>显示哪方行棋<span class="token keyword">if</span> （其中Move <span class="token operator">==</span> RED）            <span class="token punctuation">{</span>其中移动 <span class="token operator">=</span> 黑色<span class="token punctuation">;</span>            <span class="token punctuation">}</span>还            <span class="token punctuation">{</span>其中移动 <span class="token operator">=</span> 红色<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>重置点击属性状态 <span class="token operator">=</span> 开始<span class="token punctuation">;</span>开始。x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>开始。y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>结束。x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>结束。y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="判断输赢："><a href="#判断输赢：" class="headerlink" title="判断输赢："></a><strong>判断输赢：</strong></h6><pre class=" language-c"><code class="language-c">bool <span class="token function">JudgeWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    POINT general<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双方九宫格左上角的位置</span>    <span class="token keyword">int</span> isok <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//统计将领数量，正常为两个</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 将 <span class="token operator">||</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 帥<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    isok<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//如果两个首领都在，则未结束，只有一个，则结束</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isok <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> false<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="main函数的最终写法"><a href="#main函数的最终写法" class="headerlink" title="main函数的最终写法:"></a>main函数的最终写法:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token function">initgraph</span><span class="token punctuation">(</span>WIN_WIDTH<span class="token punctuation">,</span> WIN_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图像窗口</span>    <span class="token function">GameInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化</span>    <span class="token function">BeginBatchDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双缓冲</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//循环绘制</span>    <span class="token punctuation">{</span>        <span class="token function">GameDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">FlushBatchDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">KeyControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">chessMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">JudgeWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> true<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断结束弹出窗口</span>        <span class="token punctuation">{</span>            <span class="token function">MessageBox</span><span class="token punctuation">(</span><span class="token function">GetHWnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"游戏结束~"</span><span class="token punctuation">,</span> <span class="token string">"Waring"</span><span class="token punctuation">,</span> MB_OK<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2022/03/06/1-1/"/>
      <url>/2022/03/06/1-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test 2</title>
      <link href="/2022/03/06/1/"/>
      <url>/2022/03/06/1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/06/hello-world/"/>
      <url>/2022/03/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 说明 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
