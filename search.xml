<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>qt的简史</title>
      <link href="/2022/03/10/qt-de-jian-shi/"/>
      <url>/2022/03/10/qt-de-jian-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="1-QT"><a href="#1-QT" class="headerlink" title="1.QT"></a>1.QT</h1><h2 id="1-什么是QT："><a href="#1-什么是QT：" class="headerlink" title="1.什么是QT："></a>1.什么是QT：</h2><pre class=" language-txt"><code class="language-txt">Qt（官方发音 [kju:t]，音同 cute）是一个跨平台的 C++ 开发库，主要用来开发图形用户界面（Graphical User Interface，GUI）程序，当然也可以开发不带界面的命令行（Command User Interface，CUI）程序。Qt 是纯 C++ 开发的，所以学好 C++ 非常有必要，Qt 还存在 Python、Ruby、Perl 等脚本语言的绑定， 也就是说可以使用脚本语言开发基于 Qt 的程序。开源社区就是这样，好东西就会被派生扩展，到处使用， 越来越壮大。Qt 支持的操作系统有很多，例如通用操作系统 Windows、Linux、Unix，智能手机系统 Android、iOS、WinPhone， 嵌入式系统 QNX、VxWorks 等等。</code></pre><h2 id="2-QT能做什么："><a href="#2-QT能做什么：" class="headerlink" title="2.QT能做什么："></a>2.QT能做什么：</h2><pre class=" language-txt"><code class="language-txt">Qt 虽然经常被当做一个 GUI 库，用来开发图形界面应用程序，但这并不是 Qt 的全部；Qt 除了可以绘制漂亮的界面（包括控件、布局、交互），还包含很多其它功能，比如多线程、访问数据库、图像处理、音频视频处理、网络通信、文件操作等，这些 Qt 都已经内置了。Qt 是应用程序开发的一站式解决方案，有了 Qt，你就可以高枕无忧了！Qt 本身包含的模块也日益丰富， 一直有新模块和第三方模块加入进来。 大部分应用程序都可以使用 Qt 实现，除了与计算机底层结合特别紧密的，例如驱动开发，它直接使用硬件提供的编程接口，而不能使用操作系统自带的函数库。1997年，Qt 被用来开发 Linux 桌面环境 KDE，大获成功，使 Qt 成为 Linux 环境下开发 C++ GUI 程序的事实标准。下面的程序都使用 Qt 开发：WPS、YY语音、Skype、豆瓣电台、虾米音乐、淘宝助理、千牛、暴雪的战网客户端、VirtualBox、Opera、咪咕音乐、Google地图、Adobe Photoshop Album 等。Linux 也是嵌入式的主力军，广泛应用于消费类电子、工业控制、军工电子、电信/网络/通讯、航空航天、汽车电子、医疗设备、仪器仪表等相关行业。Qt 虽然也支持手机操作系统，但是由于 Android 本身已经有 Java 和 Kotlin，iOS 本身已经有 Objective-C 和 Swift，所以 Qt 在移动端的市场份额几乎可以忽略。总起来说，Qt 主要用于桌面程序开发和嵌入式开发。</code></pre><h2 id="3-Qt-的历史"><a href="#3-Qt-的历史" class="headerlink" title="3.Qt 的历史:"></a>3.Qt 的历史:</h2><pre class=" language-txt"><code class="language-txt">说到 Qt 的发展史，那真是一波三折，几经卖身。Qt 最早是 1991 年由挪威的 Eirik Chambe-Eng 和 Haavard Nord 开发的， 他们随后于 1994 年 3 月 4 号正式成立奇趣科技公司（Trolltech）。Qt 原本是商业授权的跨平台开发库， 在 2000 年奇趣科技公司为开源社区发布了遵循 GPL（GNU General Public License）许可证的开源版本。在 2008 年，诺基亚公司收购了奇趣科技公司，并增加了 LGPL（GNU Lesser General Public License）的授权模式。诺基亚联合英特尔利用 Qt 开发了全新的智能手机系统 MeeGo，可惜遭遇了微软木马屠城，诺基亚被迫放弃了 MeeGo， 而 Qt 商业授权业务也于 2011 年 3 月出售给了芬兰 IT 服务公司 Digia。</code></pre><h2 id="4-QT和KDE："><a href="#4-QT和KDE：" class="headerlink" title="4.QT和KDE："></a>4.QT和KDE：</h2><pre class=" language-txt"><code class="language-txt">之前提到 Qt 原本是商业授权软件，是怎么开源的呢？这就涉及 Qt 和 KDE 的纠葛了。KDE 是 Linux 操作系统的桌面环境，与 GNOME 桌面是类似的，作为开源桌面它们竞争的情况更为多见。KDE 是采用 GPL 许可证发布的开源软件，而最初 Qt 是商业授权的，存在商业侵权风险，GNOME 则是基于开源 GTK 库的，没有什么商业风险，这一度是 GNOME 优越于 KDE 的特性。由于 Qt 的商业授权，KDE 社区一度混乱纠结，与此同时 GNOME 则如火如荼发展起来了。 KDE 毕竟算是亲儿子，被另一波人欺负，奇趣科技公司当然看不下去了，最后是奇趣科技公司为了赢得开发者的支持，为 Qt 增加了 GPL 的开源授权， 对于开源社区而言，遵循 GPL 使用 Qt 就不需要付费，这为 KDE 解决了燃眉之急。之后 KDE 桌面和 GNOME 都发展壮大起来，都做得越来越好了。</code></pre><h2 id="5-GPL和LGPL："><a href="#5-GPL和LGPL：" class="headerlink" title="5.GPL和LGPL："></a>5.GPL和LGPL：</h2><pre class=" language-txt"><code class="language-txt">除了商业授权，目前 Qt 的开源授权有两种，一种是 GPL 授权，另一种是 LGPL 授权（诺基亚收购后新增）。对这两种开源授权，简单来说，使用 GPL 版本的软件一定还是 GPL 的开源软件，无论是使用了 Qt 的程序代码还是修改了 Qt 库代码，都必须按照 GPL 来发布，这是 GPL 的传染性。GPL 是什么都要开源，这对商业软件应用是不利的，所以诺基亚增加了 LGPL 授权 （第一个 L 可以叫 Lesser 宽松版或 Library 开发库版）。使用 LGPL 授权就可以利用 Qt 官方动态链接库，而不必开放商业代码。只要不修改和定制 Qt 库，仅使用 Qt 官方发布的动态链接库就可以不开源，这是商业友好的授权模式。其实只要不是做商业，就不太需要关注用什么授权，以 GPL 授权发布程序代码就可以了。</code></pre><h2 id="6-如何选择开源协议呢："><a href="#6-如何选择开源协议呢：" class="headerlink" title="6.如何选择开源协议呢："></a>6.如何选择开源协议呢：</h2><pre class=" language-txt"><code class="language-txt">世界上的开源协议有上百种，很少有人能彻底搞清它们之间的区别，即使在最流行的六种开源协议——GPL、BSD、MIT、Mozilla、Apache 和 LGPL——之中做选择，也很复杂。乌克兰程序员 Paul Bagwell 画了一张分析图，说明应该怎么选择开源协议，大家看了一目了然，真是清爽。最后请参考qt官网；</code></pre><h1 id="2-为啥要用QT："><a href="#2-为啥要用QT：" class="headerlink" title="2.为啥要用QT："></a>2.为啥要用QT：</h1><pre class=" language-txt"><code class="language-txt">用 Qt 来开发 Windows 桌面程序有以下优点：- 简单易学：Qt 封装的很好，几行代码就可以开发出一个简单的客户端，不需要了解 Windows API。- 资料丰富：资料丰富能够成倍降低学习成本，否则你只能去看源码，关于 DirectUI、Htmlayout、aardio 的资料就很少。- 漂亮的界面：Qt 很容易做出漂亮的界面和炫酷的动画，而 MFC、WTL、wxWidgets 比较麻烦。- 独立安装：Qt 程序最终会编译为本地代码，不需要其他库的支撑，而 Java 要安装虚拟机，C# 要安装 .NET Framework。- 跨平台：如果你的程序需要运行在多个平台下，同时又希望降低开发成本，Qt 几乎是必备的。</code></pre><h2 id="QT和MFC："><a href="#QT和MFC：" class="headerlink" title="QT和MFC："></a>QT和MFC：</h2><pre class=" language-txt"><code class="language-txt">读者经常将 MFC 和 Qt 进行对比，MFC 只能应用在 Windows 平台，而 Qt 是跨平台的，一次编写，到处运行。另外，Qt 已经封装了底层细节，学习 Qt 将会非常简单；而 MFC 只是给 Windows API 加了一层包装，不了解 Windows API 也学不好 MFC，大家普遍反映 MFC 难学。我们不能简单地说 Qt 好还是 MFC 好，两者都有用武之地；但是初学者学习 Qt 会比较简单，不用应付那些烦人的 Windows API，很快就能开发出带有漂亮界面的应用程序</code></pre><h1 id="3-Qt-Creator"><a href="#3-Qt-Creator" class="headerlink" title="3.Qt Creator:"></a>3.Qt Creator:</h1><pre class=" language-txt"><code class="language-txt">Qt Creator是跨平台的 Qt IDE， Qt Creator 是 Qt 被 Nokia收购后推出的一款新的轻量级集成开发环境（IDE）。此 IDE 能够跨平台运行，支持的系统包括 Linux（32 位及 64 位）、Mac OS X 以及 Windows。使用QtCreator创建的项目目录中不能包含中文和空格)(切记不然会出现莫名其妙的错误)QtCreator默认使用Utf8格式编码对文件字符进行编码</code></pre><pre class=" language-txt"><code class="language-txt">为了处理汉字，程序员设计了用于简体中文的GB2312和用于繁体中文的big5。GB2312 支持的汉字太少，1995年的汉字扩展规范GBK1.0，支持了更多的汉字。2000年的 GB18030取代了GBK1.0成为了正式的国家标准。Unicode 也是一种字符编码方法，不过它是由国际组织设计，可以容纳全世界所有语言文字的编码方案。</code></pre><h2 id="修改Qt-Creator文件编码：菜单栏-gt-工具-gt-选项-gt-文本编辑器-gt-行为-gt-文件编码"><a href="#修改Qt-Creator文件编码：菜单栏-gt-工具-gt-选项-gt-文本编辑器-gt-行为-gt-文件编码" class="headerlink" title="修改Qt Creator文件编码：菜单栏->工具->选项->文本编辑器->行为->文件编码"></a>修改Qt Creator文件编码：菜单栏-&gt;工具-&gt;选项-&gt;文本编辑器-&gt;行为-&gt;文件编码</h2><h2 id="主界面："><a href="#主界面：" class="headerlink" title="主界面："></a>主界面：</h2><h2 id="左边第一个是欢迎界面；"><a href="#左边第一个是欢迎界面；" class="headerlink" title="左边第一个是欢迎界面；"></a>左边第一个是欢迎界面；</h2><p>下面是文本编辑器；</p><p>然后是可视化窗口编辑界面（设计窗口编辑界面）；</p><p>然后是调试界面；</p><p>然后是项目属性设置界面；</p><p>然后是查阅文档的界面；</p><h3 id="左下角的分别是："><a href="#左下角的分别是：" class="headerlink" title="左下角的分别是："></a>左下角的分别是：</h3><p>设置调试模式：release和debug；</p><p>然后是运行模式：</p><p>然后是程序调试：</p><p>然后是项目构建：（编译）;</p><h2 id="右上角的是："><a href="#右上角的是：" class="headerlink" title="右上角的是："></a>右上角的是：</h2><p>new是新建项目;</p><p>open是打开已有项目;</p><h3 id="后面是创建项目："><a href="#后面是创建项目：" class="headerlink" title="后面是创建项目："></a>后面是创建项目：</h3><p>这里要选择模板：Application</p><h3 id="填写项目名称和路径（切记不能有中文和空格）"><a href="#填写项目名称和路径（切记不能有中文和空格）" class="headerlink" title="填写项目名称和路径（切记不能有中文和空格）"></a>填写项目名称和路径（切记不能有中文和空格）</h3><h3 id="选择编译系统选择qmake即可"><a href="#选择编译系统选择qmake即可" class="headerlink" title="选择编译系统选择qmake即可"></a>选择编译系统选择qmake即可</h3><h3 id="然后选择窗口类信息："><a href="#然后选择窗口类信息：" class="headerlink" title="然后选择窗口类信息："></a>然后选择窗口类信息：</h3><p>第一个是窗口类名;<br>        第二个是父类;</p><p> 第三个是头文件;</p><p>第四个便是源文件;</p><p>还有注意的是ui文件;</p><p>然后默认;</p><h3 id="套件特别重要"><a href="#套件特别重要" class="headerlink" title="套件特别重要:"></a>套件特别重要:</h3><p>我们选择的mingw套件;</p><p>不显示套件的话是安装的时候没有选;</p><h2 id="我们到了项目文件了"><a href="#我们到了项目文件了" class="headerlink" title="我们到了项目文件了:"></a>我们到了项目文件了:</h2><p>主函数：main.cpp:</p><pre class=" language-c++"><code class="language-c++">#include<Application>(类程序的头文件)#included"widget"(是你自己创建的头文件)int main(int argc,char *argv[]){QApplication a(argc,argv);//应用程序的对象，有且只有一个;widget w;//定义一个类的对象w.show();//显示窗口（不加这个widget它不会显示出来）return a.exec();//这个特别终于因为这个是消息循环}</code></pre><h2 id="我们自定义的头文件"><a href="#我们自定义的头文件" class="headerlink" title="我们自定义的头文件:"></a>我们自定义的头文件:</h2><pre class=" language-c++"><code class="language-c++">#ifndef WIDGET_H//防止头文件重复包含#define WIDGET_H#include<Qwidget>//自己定义类的父类头文件我们这边是讲解没有ui文件的后期将会讲到ui文件class Widget:publice Qwidget{  Q_OBJECT//信号与槽的必须品public:Widget(QWidget *parent=nullptr);//构造函数~Widget();//析构函数}#endif</code></pre><h2 id="我们的源文件少不了"><a href="#我们的源文件少不了" class="headerlink" title="我们的源文件少不了:"></a>我们的源文件少不了:</h2><pre class=" language-c++"><code class="language-c++">#include"widget"//头文件Widget::Widget(Qwidget *parent):Qwidget(parent){}Widget::~Widget(){}</code></pre><p>*.pro文件:这是Qt的项目文件注释是#</p><pre class=" language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#项目编译时需要加载哪些模块</span><span class="token attr-name">QT</span> <span class="token attr-value">   +=core gui#编译时要加的模块</span><span class="token attr-name">CONFIG</span> <span class="token attr-value">+=c++11#QT支持的c++版本</span><span class="token attr-name">DEFINES</span> <span class="token attr-value">+= QT_DEPRECATED_WARNINGS#这是低版本的函数给出警告</span><span class="token attr-name">SOURCES</span> <span class="token attr-value">+= \    main.cpp \    widget.cpp</span><span class="token comment" spellcheck="true">    #源文件的包含</span><span class="token attr-name">HEADERS</span> <span class="token attr-value">+= \    widget.h</span><span class="token comment" spellcheck="true">#相应的头文件包含</span><span class="token comment" spellcheck="true">#部署的默认规则</span><span class="token attr-name">qnx</span><span class="token punctuation">:</span> <span class="token attr-value">target.path = /tmp/$${TARGET}/bin                    #嵌入式</span><span class="token attr-name">else</span><span class="token punctuation">:</span> <span class="token attr-value">unix:!android: target.path = /opt/$${TARGET}/bin    #unix</span><span class="token comment" spellcheck="true">!isEmpty(target.path): INSTALLS += target</span><span class="token comment" spellcheck="true">#我也不是搞嵌入式的不太清楚</span></code></pre><h2 id="快捷键："><a href="#快捷键：" class="headerlink" title="快捷键："></a>快捷键：</h2><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li>运行     Ctrl + r</li><li>编译     Ctrl + b</li><li>注释     Ctrl + /</li><li>字体缩放 Ctrl + 鼠标滚轮</li><li>查找/替换 Ctrl + f</li><li>整行移动   Ctrl + Shift + ↑ 或 ↓</li><li>自动对齐   Ctrl + i</li><li>帮助文档</li><li>第一种：Qt Creator 直接查看   F1</li><li>第二种：打开独立的帮助文档程序  assistant</li><li>同名.h 和 .cpp 之间的切换  F4</li><li>快速添加函数的定义  Alt + Enter      <span style="font-size:15px"><code>鼠标移动到函数申明上</code></span></li><li>修改变量名，并应用到所有用到该变量的地方  Ctrl + Shift +r</li><li>快速打开输出窗口 Alt + 数字键(1-8)</li></ul><p>书签功能,即在某行代码处进行标记,方便以后找到。书签也可以添加文字注。</p><ul><li><p>按Ctrl + M   添加/删除书签</p></li><li><p>按Ctrl + .     查找并移动到下一个标签</p></li></ul><h2 id="主题配置-菜单栏-gt-工具-gt-选项-gt-文本编辑器"><a href="#主题配置-菜单栏-gt-工具-gt-选项-gt-文本编辑器" class="headerlink" title="主题配置:菜单栏->工具->选项->文本编辑器"></a>主题配置:<code>菜单栏-&gt;工具-&gt;选项-&gt;文本编辑器</code></h2><p>​        上面是选择系统自带的，当然也可以自己配置一个</p><ul><li><p>比如xml文件 <code>Visual studio white(Qt creator代码样式).xml</code></p></li><li><p>把该文件复制到Qt的安装目录下的-&gt;Qt\Qt5.14.2\Tools\QtCreator\share\qtcreator\styles目录中</p></li><li><p>最后进入文本编辑器选择</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> QT </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简单的象棋开发</title>
      <link href="/2022/03/09/jian-dan-de-xiang-qi-kai-fa/"/>
      <url>/2022/03/09/jian-dan-de-xiang-qi-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="简单的象棋开发"><a href="#简单的象棋开发" class="headerlink" title="简单的象棋开发"></a>简单的象棋开发</h1><h6 id="我们需要准备的知识是c语言基础和easyx图形库"><a href="#我们需要准备的知识是c语言基础和easyx图形库" class="headerlink" title="我们需要准备的知识是c语言基础和easyx图形库"></a>我们需要准备的知识是c语言基础和easyx图形库</h6><h6 id="首先头文件少不了"><a href="#首先头文件少不了" class="headerlink" title="首先头文件少不了:"></a>首先头文件少不了:</h6><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span>(c语言的头文件)</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;graphics.h></span>（easyx的）</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;mmsystem.h></span>（音乐播放的）</span><span class="token macro property">#<span class="token directive keyword">pragma</span> comment(lib,"winmm.lib")（链接上音乐播放器的库）</span></code></pre><h6 id="然后老套路了"><a href="#然后老套路了" class="headerlink" title="然后老套路了:"></a>然后老套路了:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h6 id="创建图形窗口（这里不创建会听到熟悉的声音）"><a href="#创建图形窗口（这里不创建会听到熟悉的声音）" class="headerlink" title="创建图形窗口（这里不创建会听到熟悉的声音）:"></a>创建图形窗口（这里不创建会听到熟悉的声音）:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">initgraph</span><span class="token punctuation">(</span>WIN_WIDTH<span class="token punctuation">,</span> WIN_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// (第三个参数SHOWCONSOLE控制控制台窗口的显示与否)</span><span class="token punctuation">}</span></code></pre><h6 id="还有个问题图形窗口会闪退"><a href="#还有个问题图形窗口会闪退" class="headerlink" title="还有个问题图形窗口会闪退:"></a>还有个问题图形窗口会闪退:</h6><p>所以我们需要阻塞窗口`：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>或者：</p><pre><code>getchar();</code></pre><h6 id="象棋的属性和一些初始化"><a href="#象棋的属性和一些初始化" class="headerlink" title="象棋的属性和一些初始化:"></a>象棋的属性和一些初始化:</h6><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> INTERVAL 50 </span><span class="token comment" spellcheck="true">//前面的间隔</span><span class="token macro property">#<span class="token directive keyword">define</span> CHESS_GRID_SIZE 70</span><span class="token comment" spellcheck="true">//格子宽度</span><span class="token macro property">#<span class="token directive keyword">define</span> ROW 10</span><span class="token macro property">#<span class="token directive keyword">define</span> COL 9</span><span class="token macro property">#<span class="token directive keyword">define</span> WIN_WIDTH ((COL-1)*CHESS_GRID_SIZE+INTERVAL*2+250)</span><span class="token comment" spellcheck="true">//窗口宽度计算得出</span><span class="token macro property">#<span class="token directive keyword">define</span> WIN_HEIGHT ((ROW-1)*CHESS_GRID_SIZE+INTERVAL*2)</span><span class="token comment" spellcheck="true">//窗口高度计算得出</span>IMAGE img_chessBoard<span class="token punctuation">;</span><span class="token punctuation">(</span>定义背景图<span class="token punctuation">)</span><span class="token keyword">void</span> <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>加载背景图<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">loadimage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>img_chessBoard<span class="token punctuation">,</span> <span class="token string">"./res/Chess.jpg"</span><span class="token punctuation">,</span> <span class="token number">650</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">enum</span> Pieces <span class="token comment" spellcheck="true">//棋子</span><span class="token punctuation">{</span>    SPACE <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>    車<span class="token punctuation">,</span> 馬<span class="token punctuation">,</span> 象<span class="token punctuation">,</span> 士<span class="token punctuation">,</span> 将<span class="token punctuation">,</span> 砲<span class="token punctuation">,</span> 卒<span class="token punctuation">,</span>    俥<span class="token punctuation">,</span> 马<span class="token punctuation">,</span> 相<span class="token punctuation">,</span> 仕<span class="token punctuation">,</span> 帥<span class="token punctuation">,</span> 炮<span class="token punctuation">,</span> 兵<span class="token punctuation">,</span>    BEGIN<span class="token punctuation">,</span> END<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//给id赋值</span><span class="token keyword">int</span> redChess<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 車<span class="token punctuation">,</span> 馬<span class="token punctuation">,</span> 象<span class="token punctuation">,</span> 士<span class="token punctuation">,</span> 将<span class="token punctuation">,</span> 砲<span class="token punctuation">,</span> 卒 <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> blackChess<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 俥<span class="token punctuation">,</span> 马<span class="token punctuation">,</span> 相<span class="token punctuation">,</span> 仕<span class="token punctuation">,</span> 帥<span class="token punctuation">,</span> 炮<span class="token punctuation">,</span> 兵 <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绘制时转化成字符串</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ChessName<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"車"</span><span class="token punctuation">,</span><span class="token string">"馬"</span><span class="token punctuation">,</span><span class="token string">"象"</span><span class="token punctuation">,</span><span class="token string">"士"</span><span class="token punctuation">,</span><span class="token string">"将"</span><span class="token punctuation">,</span><span class="token string">"砲"</span><span class="token punctuation">,</span><span class="token string">"卒"</span><span class="token punctuation">,</span><span class="token string">"俥"</span><span class="token punctuation">,</span> <span class="token string">"马"</span><span class="token punctuation">,</span> <span class="token string">"相"</span><span class="token punctuation">,</span> <span class="token string">"仕"</span><span class="token punctuation">,</span> <span class="token string">"帥"</span><span class="token punctuation">,</span> <span class="token string">"炮"</span><span class="token punctuation">,</span> <span class="token string">"兵"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">struct</span> Chess<span class="token punctuation">{</span>    <span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋子名称</span>    <span class="token keyword">int</span> type<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋子类型，红棋，还是黑棋</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//坐标</span>    <span class="token keyword">int</span> y<span class="token punctuation">;</span>    bool river<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否过了河</span><span class="token punctuation">}</span>map<span class="token punctuation">[</span>ROW<span class="token punctuation">]</span><span class="token punctuation">[</span>COL<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><h6 id="鼠标的点击初始化"><a href="#鼠标的点击初始化" class="headerlink" title="鼠标的点击初始化:"></a>鼠标的点击初始化:</h6><pre class=" language-c"><code class="language-c">POINT begin <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录前后两次点击的下标</span><span class="token keyword">int</span> state <span class="token operator">=</span> BEGIN<span class="token punctuation">;</span><span class="token keyword">int</span> whereMove <span class="token operator">=</span> RED<span class="token punctuation">;</span></code></pre><h6 id="游戏开始初始化"><a href="#游戏开始初始化" class="headerlink" title="游戏开始初始化:"></a>游戏开始初始化:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">GameInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//遍历二维数组</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ROW<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> temp1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> temp2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> COL<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> chessname <span class="token operator">=</span> SPACE<span class="token punctuation">;</span>            <span class="token keyword">int</span> mcolor <span class="token operator">=</span> BLACK<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//black黑色</span>            <span class="token comment" spellcheck="true">//黑棋初始化</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                mcolor <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//第1行</span>                <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                        temp<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span>                    <span class="token punctuation">{</span>                        temp1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> temp2<span class="token punctuation">;</span>                        temp2<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span>temp1<span class="token punctuation">]</span><span class="token punctuation">;</span>                    temp1<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置炮</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> k <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置小兵</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> k <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> blackChess<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span><span class="token comment" spellcheck="true">//红旗初始化</span>            <span class="token punctuation">{</span>                mcolor <span class="token operator">=</span> RED<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//最后一行</span>                <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                        temp<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span>                    <span class="token punctuation">{</span>                        temp1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> temp2<span class="token punctuation">;</span>                        temp2<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span>temp1<span class="token punctuation">]</span><span class="token punctuation">;</span>                    temp1<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置炮</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> k <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//设置小兵</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span> <span class="token operator">&amp;&amp;</span> k <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    chessname <span class="token operator">=</span> redChess<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">=</span> mcolor<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> chessname<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>river <span class="token operator">=</span> false<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> k <span class="token operator">*</span> CHESS_GRID_SIZE <span class="token operator">+</span> INTERVAL<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> i <span class="token operator">*</span> CHESS_GRID_SIZE <span class="token operator">+</span> INTERVAL<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="游戏绘制"><a href="#游戏绘制" class="headerlink" title="游戏绘制:"></a>游戏绘制:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">GameDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">setbkcolor</span><span class="token punctuation">(</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">252</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cleardevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setlinestyle</span><span class="token punctuation">(</span>PS_SOLID<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setfillcolor</span><span class="token punctuation">(</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">252</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">putimage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>img_chessBoard<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//画棋子</span>    <span class="token function">settextstyle</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"楷体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setbkmode</span><span class="token punctuation">(</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ROW<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> COL<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> SPACE<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> BLACK<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token function">settextcolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span>                <span class="token punctuation">{</span>                    <span class="token function">settextcolor</span><span class="token punctuation">(</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setlinecolor</span><span class="token punctuation">(</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token function">fillcircle</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">fillcircle</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">outtextxy</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> ChessName<span class="token punctuation">[</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//画点击出现的边框</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> END <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> SPACE<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">setlinecolor</span><span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">line</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h6 id="游戏控制"><a href="#游戏控制" class="headerlink" title="游戏控制:"></a>游戏控制:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">KeyControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> ExMessage msg<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">peekmessage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>msg<span class="token punctuation">,</span> EM_MOUSE<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>message <span class="token operator">==</span> WM_LBUTTONDOWN<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取鼠标点击得数组下标</span>            <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>y <span class="token operator">-</span> INTERVAL<span class="token punctuation">)</span> <span class="token operator">/</span> CHESS_GRID_SIZE<span class="token punctuation">;</span>            <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">-</span> INTERVAL<span class="token punctuation">)</span> <span class="token operator">/</span> CHESS_GRID_SIZE<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//if (msg.y > map[row][col].y - 30 &amp;&amp; msg.y&lt;map[row][col].y + 30 &amp;&amp; msg.x>map[row][col].x - 30 &amp;&amp; msg.x &lt; map[row][col].x + 30)</span>            <span class="token comment" spellcheck="true">//{</span>            <span class="token comment" spellcheck="true">//    //在棋子上点击</span>            <span class="token comment" spellcheck="true">//}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                col<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                row<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>x <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">30</span> <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>y <span class="token operator">></span> map<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                row<span class="token operator">++</span><span class="token punctuation">;</span>                col<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> BEGIN<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"begin:(%d,%d)\n"</span><span class="token punctuation">,</span> begin<span class="token punctuation">.</span>x<span class="token punctuation">,</span> begin<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                begin<span class="token punctuation">.</span>x <span class="token operator">=</span> row<span class="token punctuation">;</span>                begin<span class="token punctuation">.</span>y <span class="token operator">=</span> col<span class="token punctuation">;</span>                state <span class="token operator">=</span> END<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> END<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"end:(%d,%d)\n"</span><span class="token punctuation">,</span> end<span class="token punctuation">.</span>x<span class="token punctuation">,</span> end<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                end<span class="token punctuation">.</span>x <span class="token operator">=</span> row<span class="token punctuation">;</span>                end<span class="token punctuation">.</span>y <span class="token operator">=</span> col<span class="token punctuation">;</span>                state <span class="token operator">=</span> BEGIN<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="游戏规则"><a href="#游戏规则" class="headerlink" title="游戏规则:"></a>游戏规则:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> check（POINT begin， POINT end）<span class="token punctuation">{</span><span class="token keyword">int</span> _count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>水平方向<span class="token keyword">int</span> tmax <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> tmin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>如果（开始。x <span class="token operator">==</span> 结束。（十）    <span class="token punctuation">{</span>tmax <span class="token operator">=</span> max（begin<span class="token punctuation">.</span>是的，结束。y）<span class="token punctuation">;</span>tmin <span class="token operator">=</span> min（begin<span class="token punctuation">.</span>是的，结束。y）<span class="token punctuation">;</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> tmin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tmax<span class="token punctuation">;</span> i<span class="token operator">++</span>）        <span class="token punctuation">{</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格）            <span class="token punctuation">{</span>_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>否则如果（开始。y <span class="token operator">==</span> 结束。y）    <span class="token punctuation">{</span>垂直方向tmax <span class="token operator">=</span> max（begin<span class="token punctuation">.</span>x，结束。x）<span class="token punctuation">;</span>tmin <span class="token operator">=</span> min（begin<span class="token punctuation">.</span>x，结束。x）<span class="token punctuation">;</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> tmin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tmax<span class="token punctuation">;</span> i<span class="token operator">++</span>）        <span class="token punctuation">{</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格）            <span class="token punctuation">{</span>_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>返回_count<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h6 id="棋子的移动："><a href="#棋子的移动：" class="headerlink" title="棋子的移动："></a><strong>棋子的移动：</strong></h6><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> chessMove（）<span class="token punctuation">{</span>布尔 isok <span class="token operator">=</span> 假<span class="token punctuation">;</span>printf（<span class="token string">"whereMove %d \n"</span>， whereMove）<span class="token punctuation">;</span>点击的不是同一个，以及都有了数据如果 （！（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">&amp;&amp;</span> begin<span class="token punctuation">.</span>y <span class="token operator">==</span> 结束。y） <span class="token operator">&amp;&amp;</span>begin<span class="token punctuation">.</span>x ！<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x ！<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> 空格<span class="token operator">&amp;&amp;</span> （map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 空格<span class="token operator">||</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 ！<span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。类型）<span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 其中移动）    <span class="token punctuation">{</span>POINT general<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span>，<span class="token number">3</span>，<span class="token number">7</span>，<span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双方九宫格左上角的位置</span><span class="token keyword">switch</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>（id）        <span class="token punctuation">{</span>案例件数：：将：表壳件数：：帥：<span class="token keyword">for</span> （<span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span>）            <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x<span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span>）                <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。y<span class="token punctuation">;</span>k <span class="token operator">&lt;=</span> 一般<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span>）                    <span class="token punctuation">{</span>如果（结束。x <span class="token operator">==</span> i <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> k <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">//结束位置在九宫格内</span>（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y） <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">///结束位置和开始位置，在同一水平或垂直方向（只能走直线）</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>） <span class="token comment" spellcheck="true">//一次只能走一格</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳片： ：士：表壳片：：仕：<span class="token keyword">for</span> （<span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span>）            <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x<span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span>）                <span class="token punctuation">{</span><span class="token keyword">for</span> （<span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>。y<span class="token punctuation">;</span>k <span class="token operator">&lt;=</span> 一般<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span>）                    <span class="token punctuation">{</span>如果（结束。x <span class="token operator">==</span> i <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> k <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">//结束位置在九宫格内</span>（开始。x ！<span class="token operator">=</span> 结束。x <span class="token operator">&amp;&amp;</span> begin<span class="token punctuation">.</span>y ！<span class="token operator">=</span> 结束。y） <span class="token operator">&amp;&amp;</span> <span class="token comment" spellcheck="true">///结束位置和开始位置，不在同一水平或垂直方向（只能走斜线）</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>） <span class="token comment" spellcheck="true">//一次只能走一格</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例件数：：相：表壳件：：象：如果 （（结束。x <span class="token operator">==</span> 开始。x <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>y <span class="token operator">==</span> 开始。y <span class="token operator">-</span> <span class="token number">2</span>）<span class="token comment" spellcheck="true">// ||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y - 2）</span><span class="token comment" spellcheck="true">// ||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y + 2）</span><span class="token comment" spellcheck="true">// ||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y + 2）</span>            <span class="token comment" spellcheck="true">//    )</span>如果 （abs（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。类型）            <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳件：：马：表壳片：：马：<span class="token comment" spellcheck="true">/*如果 （（完。x == 开始。x + 1 &amp;&amp; end.y == 开始。y + 2）||（完。x == 开始。x + 1 &amp;&amp; end.y == 开始。y - 2）||（完。x == 开始。x - 1 &amp;&amp; end.y == 开始。y + 2）||（完。x == 开始。x - 1 &amp;&amp; end.y == 开始。y - 2）||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y + 1）||（完。x == 开始。x + 2 &amp;&amp; end.y == 开始。y - 1）||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y + 1）||（完。x == 开始。x - 2 &amp;&amp; end.y == 开始。y - 1）                )*/</span>如果 （（abs（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">2</span>）<span class="token operator">||</span>（腹肌（结束。x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> abs（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））            <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>表壳件数：：俥：表壳件数：：車：判断直行如果（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y）            <span class="token punctuation">{</span>落子位置为空，落子位置和源位置之间没有子挡路<span class="token keyword">if</span> （check（begin， end） <span class="token operator">==</span> <span class="token number">0</span>）                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例片数：：炮：表壳件数：：砲：判断直行如果（开始。x <span class="token operator">==</span> 结束。x <span class="token operator">||</span>开始。y <span class="token operator">==</span> 结束。y）            <span class="token punctuation">{</span>落子位置为空，落子位置和源位置之间没有子挡路<span class="token keyword">if</span> （（map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> SPACE <span class="token operator">&amp;&amp;</span> check（begin， end） <span class="token operator">==</span> <span class="token number">0</span>）<span class="token comment" spellcheck="true">//走子</span><span class="token operator">||</span>（map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id ！<span class="token operator">=</span> SPACE <span class="token operator">&amp;&amp;</span> check（begin， end） <span class="token operator">==</span> <span class="token number">1</span>））<span class="token comment" spellcheck="true">//吃子</span>                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>吃子判断，落子位置有子，落子位置和源位置之间有且只有一个字挡路            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>案例片：：兵：表壳件数：：卒：没过河只准向前，不转左右<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 开始。x <span class="token operator">&lt;=</span> <span class="token number">4</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 假<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 开始。x <span class="token operator">></span> <span class="token number">4</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 真<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> begin。x <span class="token operator">>=</span> <span class="token number">5</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 假<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> begin。x <span class="token operator">&lt;</span> <span class="token number">5</span>）            <span class="token punctuation">{</span>map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">=</span> 真<span class="token punctuation">;</span>            <span class="token punctuation">}</span>如果没过河，只能向前走<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">==</span> 假 <span class="token operator">&amp;&amp;</span> 结束。y <span class="token operator">==</span> 开始。y）            <span class="token punctuation">{</span><span class="token keyword">if</span> （（map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 结束。x <span class="token operator">==</span> 开始。x <span class="token operator">+</span> <span class="token number">1</span>） <span class="token operator">||</span>（map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。type <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x <span class="token operator">==</span> 开始。x <span class="token operator">-</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果过了河，不能往回走</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>河流 <span class="token operator">==</span> 真）            <span class="token punctuation">{</span>如果为黑棋（上方），并且结束位置不小于开始位置<span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>类型 <span class="token operator">==</span> 黑色 <span class="token operator">&amp;&amp;</span> 结束。x <span class="token operator">></span> <span class="token operator">=</span> 开始。x <span class="token operator">&amp;&amp;</span> （abs（end<span class="token punctuation">.</span>x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果为红棋（下方），并且结束位置不大于开始位置</span><span class="token keyword">else</span> <span class="token keyword">if</span> （map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> RED <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token operator">=</span> 开始。x <span class="token operator">&amp;&amp;</span> （abs（end<span class="token punctuation">.</span>x <span class="token operator">-</span> 开始。x） <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span>腹肌（结束。y <span class="token operator">-</span> 开始。y） <span class="token operator">==</span> <span class="token number">1</span>））                <span class="token punctuation">{</span>isok <span class="token operator">=</span> true<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>休息<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">if</span> （isok <span class="token operator">==</span> true）        <span class="token punctuation">{</span>落子声音mciSendString（<span class="token string">"close PLAY"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>mciSendString（<span class="token string">"open ./res/playChess.mp3 别名播放"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>mciSendString（<span class="token string">"play PLAY"</span>， <span class="token number">0</span>， <span class="token number">0</span>， <span class="token number">0</span>）<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。id<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>键入 <span class="token operator">=</span>map<span class="token punctuation">[</span>开始。x<span class="token punctuation">[</span>开始。y<span class="token punctuation">]</span>。类型<span class="token punctuation">;</span>map<span class="token punctuation">[</span>end<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>end<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>river <span class="token operator">=</span> map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>。河流<span class="token punctuation">;</span>此处有待完善map<span class="token punctuation">[</span>begin<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>begin<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> 空间<span class="token punctuation">;</span>显示哪方行棋<span class="token keyword">if</span> （其中Move <span class="token operator">==</span> RED）            <span class="token punctuation">{</span>其中移动 <span class="token operator">=</span> 黑色<span class="token punctuation">;</span>            <span class="token punctuation">}</span>还            <span class="token punctuation">{</span>其中移动 <span class="token operator">=</span> 红色<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>重置点击属性状态 <span class="token operator">=</span> 开始<span class="token punctuation">;</span>开始。x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>开始。y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>结束。x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>结束。y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="判断输赢："><a href="#判断输赢：" class="headerlink" title="判断输赢："></a><strong>判断输赢：</strong></h6><pre class=" language-c"><code class="language-c">bool <span class="token function">JudgeWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    POINT general<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双方九宫格左上角的位置</span>    <span class="token keyword">int</span> isok <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> general<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//统计将领数量，正常为两个</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 将 <span class="token operator">||</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> 帥<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    isok<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//如果两个首领都在，则未结束，只有一个，则结束</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isok <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> false<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="main函数的最终写法"><a href="#main函数的最终写法" class="headerlink" title="main函数的最终写法:"></a>main函数的最终写法:</h6><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token function">initgraph</span><span class="token punctuation">(</span>WIN_WIDTH<span class="token punctuation">,</span> WIN_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图像窗口</span>    <span class="token function">GameInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化</span>    <span class="token function">BeginBatchDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//双缓冲</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//循环绘制</span>    <span class="token punctuation">{</span>        <span class="token function">GameDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">FlushBatchDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">KeyControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">chessMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">JudgeWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> true<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断结束弹出窗口</span>        <span class="token punctuation">{</span>            <span class="token function">MessageBox</span><span class="token punctuation">(</span><span class="token function">GetHWnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"游戏结束~"</span><span class="token punctuation">,</span> <span class="token string">"Waring"</span><span class="token punctuation">,</span> MB_OK<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2022/03/06/1-1/"/>
      <url>/2022/03/06/1-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test 2</title>
      <link href="/2022/03/06/1/"/>
      <url>/2022/03/06/1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/06/hello-world/"/>
      <url>/2022/03/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 说明 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
